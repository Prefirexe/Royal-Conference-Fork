# Called from country scope.

### URBANIZATION
mog_usu_base_urbanization = 200

mog_usu_urbanization_target_calc = {		# The vanilla tech discounts ain't gonna get a pass here.
	value = mog_usu_base_urbanization
	if = {
		limit = {
			root = {
				has_technology_researched = joint_stock_companies	# -10%
			}
		}
		subtract = 5
	}
	if = {
		limit = {
			root = {
				has_technology_researched = investment_banks		# -15%
			}
		}
		subtract = 10
	}
	if = {
		limit = {
			root = {
				has_technology_researched = corporate_management	# -25%
			}
		}
		subtract = 15
	}
}							# Final urbanization target = 170

mog_usu_urbanization_target_mult = 0

### LAND TRADE
mog_land_trade_from_logistics = {
	value = 1
	if = {
		limit = {
			root = {
				any_trade_route = {
					importer.owner = root
					goods = g:usu_logistics
				}
			}
		}
		market = {
			mg:usu_logistics = {
				multiply = market_goods_imports
			}
		}
	}
	else_if = {
		limit = {
			root.market = {
				mg:usu_logistics = {
					market_goods_imports > 0.1
				}
			}
		}
		market = {
			mg:usu_logistics = {
				multiply = {
					add = market_goods_imports
					divide = 2
				}
			}
		}
	}
	else = {
		multiply = 0
	}
}

### CONSTRUCTION
construction_cost_consec = 20	# Shrunk construction cost for construction sectors since they are smaller, and the AI is more likely to build/demolish them frequently as a result.

mog_construction_max_level_adjustment_calc = {		# Adding 150% of base to compensate for sector shrinkage to 2/5 of original size.
	value = 0
	if = {
		limit = {
			root = {
				has_technology_researched = urbanization			# 10
			}
		}
		add = 15
	}
	if = {
		limit = {
			root = {
				has_technology_researched = urban_planning			# 5
			}
		}
		add = 7
	}
	if = {
		limit = {
			root = {
				has_technology_researched = modern_sewerage			# 5
			}
		}
		add = 8
	}
	if = {
		limit = {
			root = {
				has_technology_researched = steel_frame_buildings	# 5
			}
		}
		add = 7
	}
	if = {
		limit = {
			root = {
				has_technology_researched = elevator				# 5
			}
		}
		add = 8
	}
}

### BUREAUCRACY CHECK
total_bureaucracy_need = {
	add = produced_bureaucracy
	subtract = bureaucracy
}

bureaucracy_percent = {
	add = produced_bureaucracy
	divide = total_bureaucracy_need
}